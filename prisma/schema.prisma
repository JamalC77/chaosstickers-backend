// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String?
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id                Int         @id @default(autoincrement())
  userId            Int
  user              User        @relation(fields: [userId], references: [id])
  printifyOrderId   String?
  stripePaymentId   String?     @unique // Ensure Stripe Payment IDs are unique
  status            String      @default("pending")
  // Add shipping details directly to the order for easier access
  shippingFirstName String?
  shippingLastName  String?
  shippingEmail     String?
  shippingPhone     String?
  shippingCountry   String?
  shippingRegion    String?
  shippingAddress1  String?
  shippingAddress2  String?
  shippingCity      String?
  shippingZip       String?
  items             OrderItem[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model OrderItem {
  id                Int      @id @default(autoincrement())
  orderId           Int
  order             Order    @relation(fields: [orderId], references: [id])
  printifyProductId String   // Renamed from productId
  printifyVariantId Int      // Added: Specific Printify variant ID used
  quantity          Int      @default(1)
  imageUrl          String   // the AI design URL (e.g., from ImgBB)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model GeneratedImage {
  id                  Int      @id @default(autoincrement())
  prompt              String
  imageUrl            String
  userId              String?  // Changed to String for client-side UUID
  noBackgroundUrl     String?  // URL for the image with background removed
  hasRemovedBackground Boolean  @default(false) // Flag to indicate if background was removed
  createdAt           DateTime @default(now())
}
